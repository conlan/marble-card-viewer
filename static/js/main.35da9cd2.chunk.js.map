{"version":3,"sources":["components/InputSection.js","App.js","index.js"],"names":["app","inputField","InputSection","props","event","currentCardId","target","value","key","loadCurrentCard","className","onChange","this","updateInput","onKeyDown","handleKeyDown","placeholder","Component","cardData","image","App","isLoading","showClipboardButton","copyComplete","undefined","nft_id","tokens","push","domain_collection","collection_number","level","is_gold_card","grade","card_title_multiline","domain_name","copyToClipboard","setState","console","log","text","join","textArea","document","createElement","innerHTML","parentElement","getElementById","appendChild","select","execCommand","removeChild","cardId","trim","length","prefix","startsWith","substring","cardIdInt","parseInt","Number","isNaN","alert","xhr","XMLHttpRequest","addEventListener","responseText","JSON","parse","open","send","stringify","href","src","hidden","onClick","copyCardDataToClipboard","CopyCompleteButton","React","ReactDOM","render"],"mappings":"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","file":"static/js/main.35da9cd2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './InputSection.css';\n\nvar app = null;\nvar inputField = null;\n\nclass InputSection extends Component {\t\n\tconstructor (props) {\n\t\tsuper(props)\n\n\t\tapp = props.app\n\t}\n\tupdateInput(event) {\n\t\tapp.currentCardId = event.target.value;\n\n\t\tinputField = event.target;\n\t}\n\n\thandleKeyDown (event) {\n\t\tif (event.key === \"Enter\") {\n\t\t\tinputField.value = \"\";\n\n\t\t\tapp.loadCurrentCard();\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"input-section\">\t\t\t\t\n\t\t\t\t<input onChange={this.updateInput} onKeyDown={this.handleKeyDown} placeholder=\"Card ID or URL\"/>\t\t\t\t\n\t\t\t</div>\t\t    \t\n\t  \t);\n\t}  \n}\n\nexport default InputSection;","import './App.css';\nimport React, { Component } from 'react';\nimport InputSection from \"./components/InputSection\"\n\nconst BLANK_CARD_OUTLINE_URL = \"marble-card-outline.jpg\"\n\nvar app = null;\nvar cardData = {\n\timage : BLANK_CARD_OUTLINE_URL\n};\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.currentCardId = 0\n\t\tthis.isLoading = false;\n\t\tthis.showClipboardButton = false;\n\t\tthis.copyComplete = false\n\n\t\tapp = this;\n\t}\n\n\tcopyCardDataToClipboard() {\n\t\tif (cardData.nft_id === undefined) {\n\t\t\tconsole.log(\"No card data found.\")\n\t\t\treturn;\n\t\t}\n\n\t\tvar tokens = []\n\t\ttokens.push(\"https://marble.cards/card/\" + cardData.nft_id)\n\t\ttokens.push(cardData.domain_collection.collection_number)\n\t\ttokens.push(cardData.level);\n\t\ttokens.push(cardData.domain_collection.is_gold_card ? \"Gold\" : \"\")\n\t\ttokens.push(cardData.grade == \"ORIGIN\" ? \"Origin\" : \"\")\n\t\ttokens.push(\"\\\"\" + cardData.card_title_multiline + \"\\\"\")\n\t\ttokens.push(cardData.domain_collection.domain_name)\n    \tapp.copyToClipboard(tokens)\t\t\n\n    \tapp.copyComplete = true;\n    \tapp.setState({})\n\t}\n\n\tcopyToClipboard(tokens) {\n\t\tvar text = tokens.join('\\t')\n\n\t    var textArea = document.createElement('textarea')\n\n\t    textArea.innerHTML = text\n\n\t    var parentElement = document.getElementById('root');\t\t\n\n\t    parentElement.appendChild(textArea)\n\n    \ttextArea.select()\n\n\t    document.execCommand('copy')\n\n\t    parentElement.removeChild(textArea)\n\n    \tconsole.log(\"'\" + text + \"' copied to clipboard\")\n\t}\n\n\tloadCurrentCard() {\t\t\n\t\t// check if we're already loading a request\n\t\tif (app.isLoading) {\n\t\t\tconsole.log(\"app already loading, wait til previous request returns!\")\n\t\t\treturn\n\t\t}\n\t\t\n\t\tvar cardId = app.currentCardId.trim()\n\n\t\t// parse out any full links if detected\n\t\tif (cardId.length > 0) {\n\t\t\tvar prefix = \"https://marble.cards/card/\"\n\n\t\t\tif (cardId.startsWith(prefix)) {\n\t\t\t\tcardId = cardId.substring(prefix.length);\n\t\t\t} else {\n\t\t\t\tprefix = \"http://marble.cards/card/\"\n\n\t\t\t\tif (cardId.startsWith(prefix)) {\n\t\t\t\t\tcardId = cardId.substring(prefix.length);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// parse the id to an int\n\t\tvar cardIdInt = parseInt(cardId)\n\n\t\tif (Number.isNaN(cardIdInt)) {\n\t\t\talert(cardId + \" is an invalid card id or url. Please provide a number or url like https://marble.cards/card/1.\")\n\t\t\treturn\n\t\t}\n\n\t\tconsole.log(\"loading...\" + cardIdInt)\n\t\t\n\t\tcardData.image = BLANK_CARD_OUTLINE_URL\n\t\tapp.isLoading = true;\n\t\tapp.showClipboardButton = false;\n\t\tapp.copyComplete = false;\n\t\tapp.setState({})\n\n\t\t// create a new XMLHttpRequest\n    \tvar xhr = new XMLHttpRequest()\n\n    \t// get a callback when the server responds\n\t    xhr.addEventListener('load', () => {\t    \t\n\t    \t// console.log(xhr.responseText)\n\n\t    \tif (xhr.responseText === \"null\") {\n\t\t\t\talert(\"No card found for \" + cardId)\n\t    \t} else {\n\t    \t\tcardData = JSON.parse(xhr.responseText)\n\t    \t\tapp.showClipboardButton = true;\n\t    \t}\n\n\t      \tapp.isLoading = false;\t      \t\n\t\t\tapp.setState({})\n\t    })\n\n\t    xhr.open('POST', 'https://ws.marble.cards/task/card_index/get_card_detail_task')\n\t    // send the request\n\t    xhr.send(JSON.stringify({ \n\t    \tnft_id: cardIdInt\n\t    }))\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t    <div className=\"App\">\t\t    \t\n\t\t    \t<br/>\n\t\t    \t<p>Collect card stats for use with&nbsp;<b>@Wayfinder</b>'s spreadsheet&nbsp;<a target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1Z7G84XtfYHZxHjdIfM4a5jI7XzSGQH14vHMTGBkMEQY/\">here</a>.</p>\n\t\t    \t<br/>\n\t\t    \t<p>Rules for MarbleCards 1vs1 are <a href=\"https://medium.com/marblecards/rules-for-marblecards-1vs1-card-game-14920bc208d5\" target=\"_blank\">here.</a></p>\n\t\t    \t<br/>\n\t\t    \t<InputSection app={app}/>\n\t\t    \t<br/>\t\t        \n\t\t        <div className=\"card-div\">\n\t\t        \t<img className=\"card-image\" src={cardData.image}/>\n\t\t        \t<img hidden={!app.isLoading} className=\"card-loading\" src=\"loading.gif\"/>\n\t        \t</div>\n\t        \t<br/>\n\t        \t<div className=\"clipboard-div\">\n\t\t        \t<button className=\"clipboard-button\" hidden={!app.showClipboardButton} onClick={this.copyCardDataToClipboard}>Copy to Clipboard</button>\n\t\t        \t<CopyCompleteButton app={this}/>\n\t\t        \t\n\t\t        </div>\n\t\t        <br/>\n\t\t    </div>\n\t\t  );\n\t}  \n}\n\nclass CopyCompleteButton extends React.Component {\n\trender () {\n\t\tif (this.props.app.copyComplete) {\n\t\t\treturn <img className=\"copy-complete-visible\" src=\"copy-complete.png\"/>\n\t\t} else {\n\t\t\treturn <img className=\"copy-complete-hidden\" src=\"copy-complete.png\"/>\n\t\t}\n\t}\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}